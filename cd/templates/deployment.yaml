apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "todoist-refresher-api.fullname" . }}
  labels:
    {{- include "todoist-refresher-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "todoist-refresher-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "todoist-refresher-api.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: ssh-keys-v
          secret:
            secretName: ssh-keys
            defaultMode: 0600
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "todoist-refresher-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # mount secret to /ssh
          volumeMounts:
          - name: ssh-keys-v
            readOnly: true
            mountPath: "/ssh"
          env:
            - name: access_id
              valueFrom:
                secretKeyRef:
                  name: akeyless-secret
                  key: access_id
            - name: access_key
              valueFrom:
                secretKeyRef:
                  name: akeyless-secret
                  key: access_key
            - name: habit_list
              valueFrom:
                secretKeyRef:
                  name: todoist-refresher-secret
                  key: habit_list
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
